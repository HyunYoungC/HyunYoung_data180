library(dplyr)
records <- read.csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-05-25/records.csv')
head(records)
records_Summary<-data.frame(records_Summary)
summary(records)
records
summary(records)
summary(records)
records
summary(records)
summary_records <- summary(records)
summary_records
record_broken <- select(filter(records, year >= 365))
record_broken <- select(filter(records, record_duration >= 365))
record_broken
mutate(date = as.Date(date)) %>%
arrange(player, date) %>%
group_by(player) %>%
mutate(record_duration = c(0, diff(date))) %>%
filter(record_duration > 365) %>%
summarise(count = n())
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
arrange(player, date) %>%
group_by(player) %>%
mutate(record_duration = c(0, diff(date))) %>%
filter(record_duration > 365) %>%
summarise(count = n())
#mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
#arrange(player, date) %>%
#group_by(player) %>%
#mutate(record_duration = c(0, diff(date))) %>%
#filter(record_duration > 365) %>%
#summarise(count = n())
mutate_records <- select(mutate(records,record_broken))
#mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
#arrange(player, date) %>%
#group_by(player) %>%
#mutate(record_duration = c(0, diff(date))) %>%
#filter(record_duration > 365) %>%
#summarise(count = n())
mutate_records <- select(mutate(records,record_broken >= 365))
filter_records <- select(filter(records, record_broken>365))
filter_records <- select(filter(records, record_broken >= 365))
make_datetime_100 <- function(year, month, day, time) {
make_datetime(year, month, day, time %/% 100, time %% 100)
}
count_record_broken <- records %>%
filter(!is.na(dep_time), !is.naa(arr_time)) %>%
mutate(
record_duration(year, month, day, time)
) %>%
select(select(origin, dest, ends_with("delay"), ends_with("time")))
make_datetime_100 <- function(year, month, day, time) {
make_datetime(year, month, day, time %/% 100, time %% 100)
}
count_record_broken <- records %>%
filter(!is.na(dep_time), !is.naa(arr_time)) %>%
mutate(
record_duration(year, month, day, time)
) %>%
select(select(origin, dest, ends_with("delay"), ends_with("time")))
make_datetime_100 <- function(year, month, day, time) {
make_datetime(year, month, day, time %/% 100, time %% 100)
}
count_record_broken <- records %>%
filter(!is.na(dep_time), !is.naa(arr_time)) %>%
mutate(
record_duration(year, month, day, time)
) %>%
select(select(origin, dest, ends_with("delay"), ends_with("time")))
make_datetime_100 <- function(year, month, day, time) {
make_datetime(year, month, day, time %/% 100, time %% 100)
}
count_record_broken <- records %>%
filter(!is.na(dep_time), !is.naa(arr_time)) %>%
mutate(
record_duration(year, month, day, dep_time)
) %>%
select(select(origin, dest, ends_with("delay"), ends_with("time")))
make_datetime_100 <- function(year, month, day, time) {
make_datetime(year, month, day, time %/% 100, time %% 100)
}
count_record_broken <- records %>%
filter(!is.na(dep_time), !is.naa(arr_time)) %>%
mutate(
record_duration(date, time_period, time)
) %>%
select(select(origin, dest, ends_with("delay"), ends_with("time")))
make_datetime_100 <- function(year, month, day, time) {
make_datetime(year, month, day, time %/% 100, time %% 100)
}
count_record_broken <- records %>%
filter(record_broken
mutate(
make_datetime_100 <- function(year, month, day, time) {
make_datetime(year, month, day, time %/% 100, time %% 100)
}
record_broken <- records %>%
filter(record_broken
mutate(
make_datetime_100 <- function(year, month, day, time) {
make_datetime(year, month, day, time %/% 100, time %% 100)
}
record_broken <- records %>%
filter(record_broken,
mutate(
record_duration(date, time_period, time)
)) %>%
select(select(origin, dest, ends_with("delay"), ends_with("time")))
mutate_records <- select(mutate(records,record_broken >= 365))
records_broken <- select(mutate(records,record_duration >= 365))
arrange_records <- arrange(recoreds,record_duration)
records_broken <- select(mutate(records,record_duration >= 365))
arrange_records <- arrange(records,record_duration)
head(arrange_records)
records_broken <- select(mutate(records,record_duration >= 365))
arrange_records <- arrange(records,record_duration)
head(arrange_records)
count(records_broken)
records_broken <- select(mutate(records,record_duration >= 365))
arrange_records <- arrange(records,record_duration)
head(arrange_records)
#count(records_broken)
nrow(record_broken)
records_broken <- select(mutate(records,record_duration >= 365))
arrange_records <- arrange(records,record_duration)
head(arrange_records)
count(records_broken)
