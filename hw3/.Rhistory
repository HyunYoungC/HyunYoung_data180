library(ggplot2) # keep in mind you have to install ggplot2 first via install.packages() if it's not installed in your machine
install.packages("ggplot2")
library(MASS)
data(Cars93)
head(Cars93)
ggplot?
?ggplot
?ggplot
ggplot(data = Cars93, mapping = aes(), environmnet = parent.frame())
head(Cars93)
ggplot(data = Cars93, mapping = aes(), environmnet = parent.frame())
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city))
?geom_point
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(data = Cars93)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(data = Cars93, size = 2, color = "blue", )
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(data = Cars93, size = 2, color = "blue", title = "EngineSize - MPG.city")
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue", title = "EngineSize - MPG.city")
?xlim
?xlim
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue", title = "EngineSize - MPG.city"), xlim(15, 20) + ylim(15, 20)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue", title = "EngineSize - MPG.city"), xlim(15, 20), ylim(15, 20)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue", title = "EngineSize - MPG.city"), xlim(15, 20), ylim(15, 20)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue", title = "EngineSize - MPG.city"), xlim(15, 20) + ylim(15, 20)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue", title = "EngineSize - MPG.city") + xlim(15, 20) + ylim(15, 20)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue", title = "EngineSize - MPG.city") + xlim(15, 20) + ylim(15, 20)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue", title = "EngineSize - MPG.city") + xlim(1.8, 3.5) + ylim(18, 25)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue", title = "EngineSize - MPG.city")
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue", title = "EngineSize - MPG.city") + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue", type = "EngineSize - MPG.city") + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue", main = "EngineSize - MPG.city") + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue", labs = "EngineSize - MPG.city") + xlim(1, 6) + ylim(10,45)
?lab
?lab
?labs
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue") + labs = (title= "Scatter Plot", subtitle = "Enginze Size - MPG.city") + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue") + labs = title= waiver(Scatter Plot), subtitle = waiver(Enginze Size - MPG.city)) + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue") + labs(title= waiver(Scatter Plot), subtitle = waiver(Enginze Size - MPG.city)) + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue") + labs(title= waiver("Scatter Plot"), subtitle = waiver("Enginze Size - MPG.city")) + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue") + labs(title=Scatter Plot, subtitle = Enginze Size-MPG.city) + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue") + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city") + xlim(1, 6) + ylim(10,45)
?caption
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue") + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.") + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(Type, MPG.city)) + geom_point(size = 2, color = "green") + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.") + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(Type, MPG.city)) + geom_point(size = 2, color = "green") + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.")
ggplot(data = Cars93, mapping = aes(Type, MPG.city, color = Type)) + geom_point(size = 2) + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.")
ggplot(data = Cars93, mapping = aes(x=EngineSize, y=MPG.city, color = Type)) + geom_point(size = 2) + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.")
ggplot(data = Cars93, mapping = aes(x=EngineSize, y=MPG.city, color = Type)) + geom_point(size = 2) + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.") + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(x=EngineSize, y=MPG.city, color = Type)) + geom_point(size = 2, curve = "red" + dashed) + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.") + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(x=EngineSize, y=MPG.city, color = Type)) + geom_point(size = 2, curve = "red" + 'dashed') + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.") + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(x=EngineSize, y=MPG.city, color = Type)) + geom_point(size = 2, curve = "red",'dashed') + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.") + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(x=EngineSize, y=MPG.city, color = Type)) + geom_point(size = 2, curve = "red") + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.") + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(x=EngineSize, y=MPG.city, color = Type)) + geom_point(size = 2) + geom_smooth(color="red", "dashed") + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.") + xlim(1, 6) + ylim(10,45)
?geom_smooth
ggplot(data = Cars93, mapping = aes(x=EngineSize, y=MPG.city, color = Type)) + geom_point(size = 2) + geom_smooth(color="red", stat="smooth") + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.") + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(x=EngineSize, y=MPG.city, color = Type)) + geom_point(size = 2) + geom_smooth(color="red", stat="smooth", method = "dashed") + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.") + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(x=EngineSize, y=MPG.city, color = Type)) + geom_point(size = 2) + geom_smooth(color="red", stat="smooth", linetype = "dashed") + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.") + xlim(1, 6) + ylim(10,45)
geom_bar(AirBags)
geom_bar(Cars93$AirBags)
ggplot(data = Cars93, mapping = aes(x=EngineSize, y=MPG.city, color = Type)) + geom_point(size = 2) + geom_smooth(color="red", stat="smooth", linetype = "dashed") + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.") + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(x=EngineSize, y=MPG.city, color = Type)) + geom_point(size = 2) + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.") + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, mapping = aes(EngineSize, MPG.city)) + geom_point(size = 2, color = "blue") + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.") + xlim(1, 6) + ylim(10,45)
ggplot(data = Cars93, aes(x = EngineSize, y = MPG.city)) + geom_point(color = "blue", size = 2) + labs(title="Scatter Plot of EngineSize vs. MPG.city", subtitle = "Relationship between Engine Size and City MPG", x = "Engine Size", y = "City MPG", caption="Source: Cars93 dataset") + xlim(0, 7) + ylim(0,50)
#method 1
ggplot(data = Cars93, aes(x = EngineSize, y = MPG.city, color = Type)) + geom_point(size = 2) + labs(
title = "Scatterplot of EngineSize vs. MPG.city by Car Type",
subtitle = "Relationship between Engine Size and City MPG",
x = "Engine Size",
y = "City MPG",
caption = "Source: Cars93 dataset"
) +
xlim(0, 7) + ylim(0, 50) + scale_color_brewer(palette = "Set1")
#method2
ggplot(data = Cars93, mapping = aes(x=EngineSize, y=MPG.city, color = Type)) + geom_point(size = 2) + labs(title="Scatter Plot", subtitle = "Enginze Size-MPG.city", caption="The x-axis represents enginze size, and y-axis represents MPG.city.") + xlim(0, 7) + ylim(0, 50)
ggplot(data = Cars93, aes(x = EngineSize, y = MPG.city)) + geom_point(color = "blue", size = 2) + labs(
title="Scatter Plot of EngineSize vs. MPG.city",
subtitle = "Relationship between Engine Size and City MPG",
x = "Engine Size",
y = "City MPG",
caption="Source: Cars93 dataset"
) +
xlim(0, 7) + ylim(0,50)
ggplot(data = Cars93, aes(x = EngineSize, y = MPG.city, color = Type)) +
geom_point(size = 2) +
geom_smooth(method = "lm", se = FALSE, linetype = "dashed", color = "red") +
labs(
title = "Scatterplot of EngineSize vs. MPG.city by Car Type",
subtitle = "Relationship between Engine Size and City MPG",
x = "Engine Size",
y = "City MPG",
caption = "Source: Cars93 dataset"
) +
xlim(0, 7) + ylim(0, 50) + scale_color_brewer(palette = "Set1")
ggplot(data = Cars93, aes(x = EngineSize, y = MPG.city, color = Type)) + geom_point(size = 2) + labs(
title = "Scatterplot of EngineSize vs. MPG.city by Car Type",
subtitle = "Relationship between Engine Size and City MPG",
x = "Engine Size",
y = "City MPG",
caption = "Source: Cars93 dataset"
) +
xlim(0, 7) + ylim(0, 50) + scale_color_brewer(palette = "Set1")
ggplot(data = Cars93, aes(x = EngineSize, y = MPG.city)) + geom_point(color = "blue", size = 2) + labs(
title="Scatter Plot of EngineSize vs. MPG.city",
subtitle = "Relationship between Engine Size and City MPG",
x = "Engine Size",
y = "City MPG",
caption="Source: Cars93 dataset"
) +
xlim(0, 7) + ylim(0,50)
ggplot(data = Cars93, aes(x = AirBags, fill = AirBags)) +
geom_bar() + labs(
title = "Count of Cars by AirBags",
subtitle = "Distribution of Cars by AirBag Types",
x = "AirBags", y = "Count",
caption = "Source: Cars93 dataset"
) +
scale_fill_brewer(palette = "Set3")
ggplot(data = Cars93, aes(x = AirBags, fill = AirBags)) +
geom_bar() + labs(
title = "Count of Cars by AirBags",
subtitle = "Distribution of Cars by AirBag Types",
x = "AirBags", y = "Count",
caption = "Source: Cars93 dataset"
) +
scale_fill_brewer(palette = "Set3")
ggplot(data = Cars93, aes(x = Origin, fill = AirBags)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Cars by AirBags for Different Origins",
subtitle = "Distribution of Cars by AirBag Types for Each Origin",
x = "Origin", y = "Count", caption = "Source: Cars93 dataset"
) +
scale_fill_brewer(palette = "Set3") + # using different colors for each 'AirBags'
facet_wrap(~Origin) # Facet by 'Origin' to create separate plots for each category and display all on the same graph
# install the packages below by uncommenting the lines. You need to do this only once.
install.packages('ozmaps') # downloads the map needed
#install.packages('sf') # package used to analyze spatial data
library(ozmaps)
library(sf)
au_states <- ozmaps::ozmap_states # read in spatial dataframe object
# Display the data
head(au_states)
# install the packages below by uncommenting the lines. You need to do this only once.
install.packages('ozmaps') # downloads the map needed
install.packages('sf') # package used to analyze spatial data
library(ozmaps)
library(sf)
au_states <- ozmaps::ozmap_states # read in spatial dataframe object
# Display the data
head(au_states)
install.packages("sf")
# install the packages below by uncommenting the lines. You need to do this only once.
install.packages('ozmaps') # downloads the map needed
install.packages('sf') # package used to analyze spatial data
library(ozmaps)
library(sf)
au_states <- ozmaps::ozmap_states # read in spatial dataframe object
# Display the data
head(au_states)
library(sf)
library(ozmaps)
au_states <- ozmaps::ozmap_states # read in spatial dataframe object
# Display the data
head(au_states)
ggplot() +
geom_sf(data = au_states) +
labs(
title = "Map of Australia",
caption = "Source: ozmaps package"
# install the packages below by uncommenting the lines. You need to do this only once.
#install.packages('ozmaps') # downloads the map needed
#install.packages('sf') # package used to analyze spatial data
library(ozmaps)
library(sf)
au_states <- ozmaps::ozmap_states # read in spatial dataframe object
# Display the data
head(au_states)
ggplot() +
geom_sf(data = au_states) +
labs(
title = "Map of Australia",
caption = "Source: ozmaps package"
# install the packages below by uncommenting the lines. You need to do this only once.
#install.packages('ozmaps') # downloads the map needed
#install.packages('sf') # package used to analyze spatial data
library(ozmaps)
library(sf)
au_states <- ozmaps::ozmap_states # read in spatial dataframe object
# Display the data
head(au_states)
# install the packages below by uncommenting the lines. You need to do this only once.
#install.packages('ozmaps') # downloads the map needed
#install.packages('sf') # package used to analyze spatial data
library(ozmaps)
library(sf)
au_states <- ozmaps::ozmap_states # read in spatial dataframe object
# Display the data
head(au_states)
ggplot() +
geom_sf(data = au_states) +
labs(
title = "Map of Australia",
caption = "Source: ozmaps package")
ggplot(data = au_states) +
geom_sf() +
labs(
title = "Map of Australia",
caption = "Source: ozmaps package")
# install the packages below by uncommenting the lines. You need to do this only once.
install.packages('ozmaps') # downloads the map needed
install.packages('sf') # package used to analyze spatial data
library(ozmaps)
library(sf)
au_states <- ozmaps::ozmap_states # read in spatial dataframe object
# Display the data
head(au_states)
install.packages("sf")
# install the packages below by uncommenting the lines. You need to do this only once.
install.packages('ozmaps') # downloads the map needed
install.packages('sf') # package used to analyze spatial data
library(ozmaps)
library(sf)
au_states <- ozmaps::ozmap_states # read in spatial dataframe object
# Display the data
head(au_states)
# install the packages below by uncommenting the lines. You need to do this only once.
#install.packages('ozmaps') # downloads the map needed
#install.packages('sf') # package used to analyze spatial data
library(ozmaps)
# install the packages below by uncommenting the lines. You need to do this only once.
#install.packages('ozmaps') # downloads the map needed
#install.packages('sf') # package used to analyze spatial data
library(ozmaps)
library(sf)
au_states <- ozmaps::ozmap_states # read in spatial dataframe object
# Display the data
head(au_states)
# Display the data
head(au_states)
ggplot(data = au_states) +
geom_sf() +
labs(
title = "Map of Australia",
caption = "Source: ozmaps package")
ggplot(data = au_states) +
geom_sf() +
labs(
title = "Map of Australia",
caption = "Source: ozmaps package")
ggplot(data = au_states) +
labs(
title = "Map of Australia",
caption = "Source: ozmaps package")
ggplot(data = au_states) +
geom_sf() +
labs(
title = "Map of Australia",
caption = "Source: ozmaps package"
)
ggplot(data = au_states, aes(fill = NAME)) +
geom_sf() +
labs(
title = "Map of Australia by State",
caption = "Source: ozmaps package"
)
library(ggplot2) # keep in mind you have to install ggplot2 first via install.packages() if it's not installed in your machine
ggplot(data = au_states) +
geom_sf() +
labs(
title = "Map of Australia",
caption = "Source: ozmaps package"
)
ggplot(data = au_states, aes(fill = NAME)) +
geom_sf() +
labs(
title = "Map of Australia by State",
caption = "Source: ozmaps package"
)
au_capitals <- tibble::tribble(
~city,           ~lat,     ~lon,
"Sydney",    -33.8688, 151.2093,
"Melbourne", -37.8136, 144.9631,
"Brisbane",  -27.4698, 153.0251,
"Adelaide",  -34.9285, 138.6007,
"Perth",     -31.9505, 115.8605,
"Hobart",    -42.8821, 147.3272,
"Canberra",  -35.2809, 149.1300,
"Darwin",    -12.4634, 130.8456,
)
ggplot(data = au_capitals, aes(fill = NAME)) +
geom_sf() +
geom_point(data = au_capitals, aes(x = lon, y = lat), col = "red", size = 2) +
labs(
title = "Map of Australia with Capital Cities",
caption = "Source: ozmaps package"
)
ggplot(data = au_capitals, aes(fill = NAME)) +
geom_sf() +
geom_point(data = au_capitals, aes(x = lon, y = lat), col = "red", size = 2) +
labs(
title = "Map of Australia with Capital Cities",
caption = "Source: ozmaps package"
)
ggplot(data = au_states, aes(fill = NAME)) +
geom_sf() +
geom_point(data = au_capitals, aes(x = lon, y = lat), col = "red", size = 2) +
labs(
title = "Map of Australia with Capital Cities",
caption = "Source: ozmaps package"
)
ggplot(data = au_states, aes(fill = NAME)) +
geom_sf() +
geom_point(data = au_capitals, aes(x = lon, y = lat), col = "red", size = 2) +
labs(
title = "Map of Australia with Capital Cities",
caption = "Source: ozmaps package"
)
library(ggplot2) # keep in mind you have to install ggplot2 first via install.packages() if it's not installed in your machine
ggplot(data = au_states, aes(fill = NAME)) +
geom_sf() +
geom_point(data = au_capitals, aes(x = lon, y = lat), col = "red", size = 2) +
labs(
title = "Map of Australia with Capital Cities",
caption = "Source: ozmaps package"
)
ggplot(data = au_states, aes(fill = NAME)) +
geom_sf() +
geom_point(data = au_capitals, aes(x = lon, y = lat), col = "red", size = 2) +
labs(
title = "Map of Australia with Capital Cities",
caption = "Source: ozmaps package"
)
# install the packages below by uncommenting the lines. You need to do this only once.
#install.packages('ozmaps') # downloads the map needed
#install.packages('sf') # package used to analyze spatial data
library(ozmaps)
library(sf)
ggplot(data = au_states, aes(fill = NAME)) +
geom_sf() +
geom_point(data = au_capitals, aes(x = lon, y = lat), col = "red", size = 2) +
labs(
title = "Map of Australia with Capital Cities",
caption = "Source: ozmaps package"
)
ggplot(data = au_states) +
geom_sf(aes(fill = NAME)) +
geom_point(data = au_capitals, aes(x = lon, y = lat), col = "red", size = 2) +
labs(
title = "Map of Australia with Capital Cities",
caption = "Source: ozmaps package"
)
ggplot(data = au_states) +
geom_sf(aes(fill = NAME)) +
geom_point(data = au_capitals, aes(x = lon, y = lat), color = "red", size = 2) +
labs(
title = "Map of Australia with Capital Cities (EPSG 3112)",
caption = "Source: ozmaps package"
) +
coord_sf(st_crs(3112)
ggplot(data = au_states) +
geom_sf(aes(fill = NAME)) +
geom_point(data = au_capitals, aes(x = lon, y = lat), color = "red", size = 2) +
labs(
title = "Map of Australia with Capital Cities (EPSG 3112)",
caption = "Source: ozmaps package"
) +
coord_sf(st_crs(3112))
ggplot(data = au_states) +
geom_sf(aes(fill = NAME)) +
geom_point(data = au_capitals, aes(x = lon, y = lat), color = "red", size = 2) +
labs(
title = "Map of Australia with Capital Cities (EPSG 3112)",
caption = "Source: ozmaps package"
) +
coord_sf(st_crs(3112))
# install the packages below by uncommenting the lines. You need to do this only once.
#install.packages('ozmaps') # downloads the map needed
#install.packages('sf') # package used to analyze spatial data
library(ozmaps)
library(sf)
ggplot(data = au_states) +
geom_sf(aes(fill = NAME)) +
geom_point(data = au_capitals, aes(x = lon, y = lat), col = "red", size = 2) +
labs(
title = "Map of Australia with Capital Cities",
caption = "Source: ozmaps package"
)
ggplot(data = au_states) +
geom_sf(aes(fill = NAME)) +
geom_point(data = au_capitals, aes(x = lon, y = lat), color = "red", size = 2) +
labs(
title = "Map of Australia with Capital Cities (EPSG 3112)",
caption = "Source: ozmaps package"
) +
coord_sf(st_crs(3112))
# install the packages below by uncommenting the lines. You need to do this only once.
#install.packages('ozmaps') # downloads the map needed
#install.packages('sf') # package used to analyze spatial data
library(ozmaps)
library(sf)
ggplot(data = au_states) +
geom_sf(aes(fill = NAME)) +
geom_point(data = au_capitals, aes(x = lon, y = lat), color = "red", size = 2) +
labs(
title = "Map of Australia with Capital Cities (EPSG 3112)",
caption = "Source: ozmaps package"
) +
coord_sf(st_crs(3112))
au_states <- st_transform(au_states, st_crs(3112))
ggplot(data = au_states) +
geom_sf(aes(fill = NAME)) +
geom_point(data = au_capitals, aes(x = lon, y = lat), color = "red", size = 2) +
labs(
title = "Map of Australia with Capital Cities (EPSG 3112)",
caption = "Source: ozmaps package"
)
install.packages('mapview') # interactive display
library(mapview)
mapview(au_states)
capitals_geo <- st_as_sf(au_capitals, coords = c("lon", "lat"))
# Convert the capitals data frame to a spatial data frame
capitals_geo <- st_as_sf(au_capitals, coords = c("lon", "lat"))
# Create an interactive map of Australia with capital cities in red
map1 <- mapview(au_states)
# Add the captial cities to the map
map2 <- map1 + mapview(capitals_geo, col.regions = "red")
# Display the map with capital cities in red and no second legend
map2 + mapview(legend = FALSE)
#install.packages('mapview') # interactive display
library(mapview)
# Convert the capitals data frame to a spatial data frame
capitals_geo <- st_as_sf(au_capitals, coords = c("lon", "lat"))
# Create an interactive map of Australia with capital cities in red
map1 <- mapview(au_states)
# Add the captial cities to the map
map2 <- map1 + mapview(capitals_geo, col.regions = "red")
# Display the map with capital cities in red and no second legend
map2 + mapview(legend = FALSE)
# Convert the capitals data frame to a spatial data frame
capitals_geo <- st_as_sf(au_capitals, coords = c("lon", "lat"))
# Create an interactive map of Australia with capital cities in red
map1 <- mapview(au_states)
# Add the captial cities to the map
map2 <- map1 + capitals_geo
# Display the map with capital cities in red and no second legend
map2
# Convert the capitals data frame to a spatial data frame
capitals_geo <- st_as_sf(au_capitals, coords = c("lon", "lat"))
# Create an interactive map of Australia with capital cities in red
map1 <- mapview(au_states) +
mapview(capitals_geo, col.regions = 'red') +
mapview(legend = FALSE)
# Convert the capitals data frame to a spatial data frame
capitals_geo <- st_as_sf(au_capitals, coords = c("lon", "lat"))
# Create an interactive map of Australia with capital cities in red
map <- mapview(au_states) +
mapview(capitals_geo, col.regions = 'red') +
mapview(legend = FALSE)
# Convert the capitals data frame to a spatial data frame
capitals_geo <- st_as_sf(au_capitals, coords = c("lon", "lat"))
# Create an interactive map of Australia with capital cities in red
map <- mapview(au_states) +
mapview(capitals_geo, col.regions = 'red') +
mapview(legend = FALSE)
# Convert the capitals data frame to a spatial data frame
capitals_geo <- st_as_sf(au_capitals, coords = c("lon", "lat"))
# Create an interactive map of Australia with capital cities in red
map <- mapview(au_states) +
mapview(capitals_geo, col.regions = 'red') +
mapview(legend = FALSE)
# Convert the capitals data frame to a spatial data frame
capitals_geo <- st_as_sf(au_capitals, coords = c("lon", "lat"))
# Create an interactive map of Australia with capital cities in red
map1 <- mapview(au_states)
# Add the captial cities to the map
map2 <- map1 + mapview(capitals_geo, col.regions = 'red')
# Display the map with capital cities in red and no second legend
map2 + mapview(legend = FALSE)
