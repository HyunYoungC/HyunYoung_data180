library(tidyverse)
install.packages("tidyverse")
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
library(tidyverse)
Mammals_Milk<-read.csv("Milk_Composition.csv",header=T,row.names=1)
head(Mammals_Milk)
summary_mammal_milk <- summary(Mammals_Milk)
summary_mammal_milk
Mammals_Milk_Std<-round(scale(Mammals_Milk),2)
head(Mammals_Milk_Std)
hclust_result <- hclust(dist(Mammals_Milk_Std), method = "complete")
plot(hclust_result, main = "Mammals Clustered by Std. Milk Composition \n Euclidean Metric, Complete Linkage",
sub = "", xlab = "Mammals", cex.lab = 1.25, hang = -1, frame.plot = TRUE, labels = rownames(Mammals_Milk_Std), lwd = 3)
set.seed(125)
set.seed(125)
# K-means clustering for k=3
MMilk_km_3 <- kmeans(Mammals_Milk_Std, centers = 3, nstart = 100)
Mammals_Milk$km_3 <- MMilk_km_3$cluster
# K-means clustering for k=4
MMilk_km_4 <- kmeans(Mammals_Milk_Std, centers = 4, nstart = 100)
Mammals_Milk$km_4 <- MMilk_km_4$cluster
# Sorting the table based on the cluster membership columns
sorted_table_km3 <- Mammals_Milk[order(Mammals_Milk$km_3), ]
sorted_table_km4 <- Mammals_Milk[order(Mammals_Milk$km_4), ]
# Printing the sorted tables
print(sorted_table_km3)
print(sorted_table_km4)
set.seed(125)
# K-means clustering for k=3
MMilk_km_3 <- kmeans(Mammals_Milk_Std, centers = 3, nstart = 100)
Mammals_Milk$km_3 <- MMilk_km_3$cluster
# K-means clustering for k=4
MMilk_km_4 <- kmeans(Mammals_Milk_Std, centers = 4, nstart = 100)
Mammals_Milk$km_4 <- MMilk_km_4$cluster
sorted_table_km3 <- arrange(Mammals_Milk, km_3)
print(sorted_table_km3)
sorted_table_km4 <- arrange(Mammals_Milk, km_4)
print(sorted_table_km4)
# Summary table for k=3
MMilk_Agg_K3 <- Mammals_Milk %>%
group_by(km_3) %>%
summarize(Count = n(),
Mean_Water = round(mean(Water), 2),
Mean_Protein = round(mean(Protein), 2),
Mean_Fat = round(mean(Fat), 2),
Mean_Lactose = round(mean(Lactose), 2),
Mean_Ash = round(mean(Ash), 2))
# Summary table for k=4
MMilk_Agg_K4 <- Mammals_Milk %>%
group_by(km_4) %>%
summarize(Count = n(),
Mean_Water = round(mean(Water), 2),
Mean_Protein = round(mean(Protein), 2),
Mean_Fat = round(mean(Fat), 2),
Mean_Lactose = round(mean(Lactose), 2),
Mean_Ash = round(mean(Ash), 2))
# Print the summary tables
print(MMilk_Agg_K3)
print(MMilk_Agg_K4)
library(cowplot)
install.packages(cowplot)
require(cowplot)
install.package(cowplot)
install.packages('cowplot')
#install.packages('cowplot')
library(cowplot)
require(cowplot)
#install.packages('cowplot')
library(ggplot2)
library(cowplot)
#require(cowplot)
graph1 <- ggplot(Mammals_Milk, aes(factor(km_3), Water)) + geom_boxplot() +
labs(title = "Distribution of Water by Cluster Membership")
graph2 <- ggplot(Mammals_Milk, aes(factor(km_3), Protein)) + geom_boxplot() +
labs(title = "Distribution of Protein by Cluster Membership")
graph3 <- ggplot(Mammals_Milk, aes(factor(km_3), Fat)) + geom_boxplot() +
labs(title = "Distribution of Fat by Cluster Membership")
graph4 <- ggplot(Mammals_Milk, aes(factor(km_3), Lactose)) + geom_boxplot() +
labs(title = "Distribution of Lactose by Cluster Membership")
graph5 <- ggplot(Mammals_Milk, aes(factor(km_3), Ash)) + geom_boxplot() +
labs(title = "Distribution of Ash by Cluster Membership")
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
set.seed(125)
# Initialize an empty vector to store WGSS values
wgss_values <- c()
# Iterate over K values from 1 to 8
for (k in 1:8) {
km <- kmeans(Mammals_Milk_Std, centers = k, nstart = 50)
wgss_values <- c(wgss_values, km$tot.withinss)
}
# Create a plot of WGSS by the number of clusters
plot(1:8, wgss_values, type = "b", pch = 19, frame = FALSE,
xlab = "Number of Clusters (K)", ylab = "Within-Group Sum of Squares (WGSS)",
main = "WGSS by Number of Clusters")
# Identify the number of clusters suggested by the elbow method
elbow_index <- which(diff(wgss_values) <= max(diff(wgss_values)) * 0.1)[1]
abline(v = elbow_index, col = "red", lty = 2)
# Print the suggested number of clusters
cat("The elbow plot suggests", elbow_index, "clusters.")
elbow_index
set.seed(125)
# Initialize an empty vector to store WGSS values
wgss_values <- c()
# Iterate over K values from 1 to 8
for (k in 1:8) {
km <- kmeans(Mammals_Milk_Std, centers = k, nstart = 50)
wgss_values <- c(wgss_values, km$tot.withinss)
}
# Create a plot of WGSS by the number of clusters
plot(1:8, wgss_values, type = "b", pch = 19, frame = FALSE,
xlab = "Number of Clusters (K)", ylab = "Within-Group Sum of Squares (WGSS)",
main = "WGSS by Number of Clusters")
# Identify the number of clusters suggested by the elbow method
elbow_index <- which(diff(wgss_values) <= max(diff(wgss_values)) * 0.1)[1]
abline(v = elbow_index, col = "red", lty = 2)
# Print the suggested number of clusters
cat("The elbow plot suggests", elbow_index, "clusters.")
#The elbow plot suggests 1 cluster. Compared to the dendrogram in Question 2, the elbow plot
set.seed(125)
# Initialize an empty vector to store WGSS values
wgss_values <- c()
# Iterate over K values from 1 to 8
for (k in 1:8) {
km <- kmeans(Mammals_Milk_Std, centers = k, nstart = 50)
wgss_values <- c(wgss_values, km$tot.withinss)
}
# Create a plot of WGSS by the number of clusters
plot(1:8, wgss_values, type = "b", pch = 19, frame = FALSE,
xlab = "Number of Clusters (K)", ylab = "Within-Group Sum of Squares (WGSS)",
main = "WGSS by Number of Clusters")
# Identify the number of clusters suggested by the elbow method
#elbow_index <- which(diff(wgss_values) <= max(diff(wgss_values)) * 0.1)[1]
#abline(v = elbow_index, col = "red", lty = 2)
# Print the suggested number of clusters
#cat("The elbow plot suggests", elbow_index, "clusters.")
#The elbow plot suggests 1 cluster. Compared to the dendrogram in Question 2, the elbow plot
